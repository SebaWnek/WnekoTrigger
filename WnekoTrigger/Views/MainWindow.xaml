<Window x:Class="WnekoTrigger.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WnekoTrigger"
        mc:Ignorable="d"
        Title="WnękoTrigger" 
        Height="450" Width="800"
        MinHeight="450" MinWidth="800"
        ResizeMode="CanResize"
        WindowStyle="None"
        x:Name="window">
    <Window.Resources>
        <local:MarginConverter x:Key="MarginConverter"/>
        <local:IntervalValidationRule x:Key="IntervalValidationRule"/>
    </Window.Resources>
    <DockPanel>

        <Grid DockPanel.Dock="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Label Content="WnękoTrigger"
                   HorizontalAlignment="Left"
                   Grid.Column="0"/>
            <StackPanel Orientation="Horizontal"
                        Grid.Column="2">
                <Button x:Name="minimizeButton"
                Content=" _ "
                DockPanel.Dock="Top"
                Width="30"
                Height="30"
                Click="MinimizeButton_Click"/>
                <Button x:Name="maximizeButton" 
                Content=" O " 
                DockPanel.Dock="Top" 
                Width="30"
                Height="30"
                Click="MaximizeButton_Click"/>
                <Button x:Name="closeButton" 
                Content=" X " 
                DockPanel.Dock="Top" 
                Width="30"
                Height="30"
                Click="CloseButton_Click"/>
            </StackPanel>
        </Grid>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="5*"/>
                <ColumnDefinition Width="5*"/>
                <ColumnDefinition Width="5*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="4*"/>
                <RowDefinition Height="4*"/>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>

            <GroupBox Grid.Row="0"
                  Grid.RowSpan="3"
                  Header="Audo level:">
                <Grid>
                    <StackPanel x:Name="barsContainer"
                        Orientation="Horizontal"
                        Grid.Row="1"
                        Margin="10">
                        <ProgressBar x:Name="levelBar"
                             Orientation="Vertical" 
                             Value="{Binding Path=VolumeLevel}" 
                             Width="50"
                             Maximum="1"
                                 Foreground="{Binding Path=BarColor}"/>
                        <Slider x:Name="tresholdSlider" 
                        Orientation="Vertical" 
                        HorizontalAlignment="Center"
                        Margin="20,0,20,0"
                        Maximum="{Binding ElementName=levelBar, Path=ActualHeight}"
                        Value="{Binding Path=Treshold}"/>

                    </StackPanel>
                    <Border Margin="{Binding ElementName=barsContainer, Path=Margin}">
                        <Separator x:Name="tresholdIndicator" 
                               VerticalAlignment="Bottom"
                               Width="{Binding ElementName=levelBar, Path=ActualWidth}"
                               HorizontalAlignment="Left"
                               Margin="{Binding ElementName=tresholdSlider, Path=Value, 
                                        Converter={StaticResource MarginConverter}}" 
                               BorderBrush="Black"
                               BorderThickness="1"/>
                    </Border>
                </Grid>
            </GroupBox>

            <GroupBox Grid.Row="0" 
                  Grid.Column="1"
                  Padding="5"
                  Header="Mode:">
                <StackPanel >
                    <ListBox>
                        <ListBoxItem Content="Single shot"
                             IsSelected="True"/>
                        <ListBoxItem Content="Multiple shots"/>
                        <ListBoxItem Content="Same interval series"/>
                        <ListBoxItem Content="Different interval series"/>
                    </ListBox>
                </StackPanel>
            </GroupBox>

            <GroupBox Grid.Row="0" 
                  Grid.RowSpan="2"
                  Grid.Column="2"
                  Header="Mode settings:">
                <StackPanel >

                    <StackPanel Margin="5">
                        <GroupBox Header="Minimal interval:" Padding="0,5,0,5">
                            <StackPanel>
                                <StackPanel Orientation="Horizontal"                                >
                                    <TextBox x:Name="multiIntervalBox"
                             Width="50"
                             HorizontalAlignment="Left"                             
                             Text="{Binding ElementName=multiIntervalSlider, 
                                    Path=Value, 
                                    Mode=TwoWay, 
                                    UpdateSourceTrigger=PropertyChanged}" Height="18"/>
                                    <Label Content="ms"/>
                                </StackPanel>
                                <Slider x:Name="multiIntervalSlider"
                                        Maximum="200"
                                        Margin="0,5,0,0"
                                        Value="{Binding MinimalInterval,
                                        Mode=TwoWay}"
                                        TickFrequency="1"
                                        IsSnapToTickEnabled="True"/>
                            </StackPanel>
                        </GroupBox>
                        <GroupBox Header="Same interval:" Padding="0,5,0,5">
                            <StackPanel>
                                <StackPanel Orientation="Horizontal"                                >
                                    <TextBox x:Name="sameIntervalBox"
                             Width="50"
                             HorizontalAlignment="Left"                             
                             Text="{Binding ElementName=sameIntervalSlider, 
                                    Path=Value, 
                                    Mode=TwoWay, 
                                    UpdateSourceTrigger=PropertyChanged}" Height="18"/>
                                    <Label Content="ms"/>
                                </StackPanel>
                                <Slider x:Name="sameIntervalSlider"
                                        Maximum="10000"
                                        Margin="0,5,0,0"
                                        Value="{Binding SameInterval, Mode=TwoWay}"
                                        TickFrequency="1"
                                        IsSnapToTickEnabled="True"/>
                                <CheckBox x:Name="intervalCountEnabledBox" 
                                          Content="Count:"
                                          Margin="0,5,0,5"
                                          IsChecked="{Binding IntervalCountEnabled, Mode=TwoWay}"/>
                                <TextBox x:Name="intervalCountBox"  
                                         IsEnabled="{Binding ElementName=intervalCountEnabledBox, Path=IsChecked}"
                                         Text="{Binding IntervalCount, Mode=TwoWay}"/>
                            </StackPanel>
                        </GroupBox>
                        <GroupBox Header="Different intervals:"
                                  Padding="0,5,0,5">
                            <StackPanel>
                                <TextBox x:Name="intervalsBox"
                                     TextWrapping="Wrap"
                                     Height="90"
                                     MaxHeight="90">
                                    <Binding Path="Intervals" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <local:IntervalValidationRule ValidationStep="RawProposedValue"/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox>
                            </StackPanel>
                        </GroupBox>
                    </StackPanel>

                </StackPanel>
            </GroupBox>

            <GroupBox Grid.Row="0"
                  Grid.RowSpan="2"
                  Grid.Column="3"
                  Padding="10"
                  Header="General settings:">
                <StackPanel>
                    <GroupBox Header="Recording device:">
                        <ComboBox x:Name="recordDeviceListBox"
                             ItemsSource="{Binding Path=Devices}"
                             SelectedItem="{Binding Path=SelectedRecordDevice, Mode=TwoWay}">
                        </ComboBox>
                    </GroupBox>
                    <GroupBox Header="Playback device:">
                        <ComboBox x:Name="playDeviceListBox"
                             ItemsSource="{Binding Path=Devices}"
                             SelectedItem="{Binding Path=SelectedPlayDevice, Mode=TwoWay}">
                        </ComboBox>
                    </GroupBox>
                    <GroupBox Header="Signal duration:" Padding="0,5,0,5">
                        <StackPanel>
                            <StackPanel Orientation="Horizontal"                                >
                                <TextBox x:Name="durationBox"
                             Width="50"
                             HorizontalAlignment="Left"                             
                             Text="{Binding ElementName=durationSlider, 
                                    Path=Value, 
                                    Mode=TwoWay, 
                                    UpdateSourceTrigger=PropertyChanged}" Height="18"/>
                                <Label Content="ms"/>
                            </StackPanel>
                            <Slider x:Name="durationSlider"
                            Maximum="200"
                            Margin="0,5,0,0"
                            Value="{Binding Duration, Mode=TwoWay}"
                            TickFrequency="1"
                            IsSnapToTickEnabled="True"/>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="First signal delay:" Padding="0,5,0,5">
                        <StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBox x:Name="delayBox"
                             Width="50"
                             HorizontalAlignment="Left"
                             Margin="0,5,0,0"
                             Text="{Binding ElementName=delaySlider, 
                                    Path=Value, 
                                    Mode=TwoWay, 
                                    UpdateSourceTrigger=PropertyChanged}"/>
                                <Label Content="ms"/>
                            </StackPanel>
                            <Slider x:Name="delaySlider"
                            Maximum="200"
                            Margin="0,5,0,0"
                            Value="{Binding Delay, Mode=TwoWay}"
                            TickFrequency="1"
                            IsSnapToTickEnabled="True"/>
                        </StackPanel>
                    </GroupBox>
                </StackPanel>
            </GroupBox>
            <Button x:Name="helpButton"
                    Content="Help"
                    Grid.Row="2"
                    Grid.Column="3"
                    Margin="40,10"
                    Command="{Binding OpenHelpCommand}"/>
        </Grid>
    </DockPanel>
</Window>
